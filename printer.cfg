# This file contains pin mappings for the stock 2022 Creality Ender 3
# Neo. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# This also works for the GD32F303 based Creality 4.2.2 board.

# See docs/Config_Reference.md for a description of parameters.


[include fluidd.cfg]
[include macros.cfg]
[include menu.cfg]
[include screws_display.cfg]

[mcu]
serial: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.5:1.0-port0 
##/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_max: 235
position_min: -25
position_endstop: -25
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_max: 225
position_min: -10
position_endstop: -10
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 255
position_min: -10
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0

[firmware_retraction]
retract_length: 5.0
retract_speed: 45
unretract_extra_length: 0
unretract_speed: 15


[extruder]
max_extrude_only_distance: 160.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 33.434332
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid
min_temp: 0
max_temp: 265
pressure_advance = 0.8

[verify_heater extruder]
check_gain_time: 200
hysteresis: 5

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
max_z_velocity: 10
max_z_accel: 1000
square_corner_velocity: 5.0

[input_shaper]
shaper_type_y = 2hump_ei
shaper_freq_y = 52.6
shaper_type_x = mzv
shaper_freq_x = 62.8

[screws_tilt_adjust]
screw1: 67, 42
screw1_name: Front left
screw2: 230, 42
screw2_name: Front right
screw3: 230, 212
screw3_name: Back right
screw4: 67, 212
screw4_name: Back left
screw_thread: CW-M4
horizontal_move_z: 10
speed: 200

[bed_screws]
screw1:30,25
screw1_name:1
screw2:200,25
screw2_name:2
screw3:200,195
screw3_name:3
screw4:30,195
screw4_name:4

[bltouch]
control_pin: PB0
sensor_pin: ^PB1
x_offset: -40
y_offset: -10
speed: 20
stow_on_each_sample = false

[safe_z_home]
home_xy_position: 160, 125
speed: 200
z_hop: 10                
z_hop_speed: 10

[bed_mesh]
speed: 150
horizontal_move_z: 10
mesh_min: 15, 30
mesh_max: 190, 190
probe_count: 5,5
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[output_pin beeper]
pin: PC6
pwm: True
value: 0 
shutdown_value: 0 
cycle_time: 0.001 

[respond]
default_type: command
[pause_resume] recover_velocity: 50


## <----- Raspberry Pi as secondary MCU -----> ##


[mcu rpi]
serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    117.5, 117.5, 1


[filament_switch_sensor RunoutSensor]
pause_on_runout: True
runout_gcode: PAUSE
insert_gcode: RESUME
switch_pin: PA4

[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.


##[temperature_sensor environment]
##sensor_type: HTU21D
#i2c_address:
#   Default is 64 (0x40).
##i2c_mcu: rpi
##i2c_bus: i2c.1
#i2c_speed: 400000
#   See the "common I2C settings" section for a description of the
#   above parameters.
#htu21d_hold_master:
#   If the sensor can hold the I2C buf while reading. If True no other
#   bus communication can be performed while reading is in progress.
#   Default is False.
##htu21d_resolution: TEMP14_HUM12
#   The resolution of temperature and humidity reading.
#   Valid values are:
#    'TEMP14_HUM12' -> 14bit for Temp and 12bit for humidity
#    'TEMP13_HUM10' -> 13bit for Temp and 10bit for humidity
#    'TEMP12_HUM08' -> 12bit for Temp and 08bit for humidity
#    'TEMP11_HUM11' -> 11bit for Temp and 11bit for humidity
#   Default is: "TEMP11_HUM11"
#htu21d_report_time:
#   Interval in seconds between readings. Default is 30

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.140
#*#
#*# [extruder]
#*# pid_kp = 27.128
#*# pid_ki = 1.690
#*# pid_kd = 108.849
#*#
#*# [heater_bed]
#*# pid_kp = 71.969
#*# pid_ki = 1.355
#*# pid_kd = 955.395
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.215000, -0.075000, -0.117500, -0.085000, -0.122500
#*# 	-0.255000, -0.087500, -0.105000, -0.050000, -0.090000
#*# 	-0.197500, -0.062500, -0.097500, -0.070000, -0.120000
#*# 	-0.222500, -0.077500, -0.095000, -0.037500, -0.077500
#*# 	-0.160000, -0.062500, -0.130000, -0.110000, -0.180000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 190.0
#*# min_y = 30.0
#*# max_y = 190.0

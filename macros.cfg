# Breakout configuration file to hold custom macros

[gcode_macro START_PRINT]
description: "G-code to run at the start of a print. Replace your slicer's start G-code with this."
gcode:
  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(205)|int %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
  M104 S{HOTEND_TEMP} ;Heat hot end to temp
  M140 S{BED_TEMP} ;Heat bed to temp
  BED_MESH_PROFILE LOAD=default
  G92 E0 ;Reset Extruder
  G28 ;Home Axis
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
  M109 S{HOTEND_TEMP} ;Wait for bed to heat
  M190 S{BED_TEMP} ;Wait for hotend to heat
  G1 X5.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X5.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
  G1 X5.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X6 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

[gcode_macro END_PRINT]
description: "G-code to run at the end of a print. Replace your slicer's end G-code with this"
gcode:
  M104 S0 ;Turn-off hotend
  M106 S0 ;Turn-off fan
  M140 S0 ;Turn-off bed

  SAFE_RETRACT
  SAFE_PARK

  M84 X Y E ;Disable all steppers but Z
  
[gcode_macro SAFE_RETRACT]
description: Retract
gcode:
  SAVE_GCODE_STATE NAME=safe_retract

  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83 ;Relative extrusion
    G91 ;Relative positioning

    G10 ;Retract filament
    G1 Z0.2 F2400 ;Raise Z
    G1 E-2 F300 ;Retract filament 2mm to prevent oozing
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESTORE_GCODE_STATE NAME=safe_retract

[gcode_macro SAFE_PARK]
description:
  "Park the print head in a safe location
  @param {float} [X=200] - The target hotend temp
  @param {float} [Y=200] - The target hotend temp
  @param {bool} [Z_MOVE=true] - Whether or not to move the Z axis. This can be useful if you've already moved on Z"
gcode:
  SAVE_GCODE_STATE NAME=safe_park

  ##### set park positon for x and y #####
  # default is your max position from your printer.cfg
  {% set x_park = params.X|default(printer.toolhead.axis_minimum.x + 5.0)|float %}
  {% set y_park = params.Y|default(printer.toolhead.axis_maximum.y - 5.0)|float %}
  {% set should_park_z = params.Z_MOVE|default('true')|string %}
  ##### calculate safe lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set current_z = printer.toolhead.position.z|float %}
  {% set jump_z = 20.0|float %}
  {% if (current_z + jump_z) < max_z %}
    {% set z_safe = (current_z + jump_z) %}
  {% else %}
    {% set z_safe = max_z %}
  {% endif %}
  ##### end of definitions #####

  {% if "xyz" in printer.toolhead.homed_axes %}
    G90 ;Use absolute coordinates
    {% if should_park_z|lower == 'true' %}
      G1 Z{z_safe} F900
    {% endif %}
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

  RESTORE_GCODE_STATE NAME=safe_park

[gcode_macro M300]
description: Buzzer
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

[gcode_macro COLOR_CHANGE]
description: M600 Colour Change
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    M300
    M300
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro M600]
description: Change the filament 
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    SET_IDLE_TIMEOUT TIMEOUT=7200
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PIDtuneHOTEND]
description: PID Tune Hot End
gcode:
	{% set TEMP = params.TEMP|default(210)|float %}
	PID_CALIBRATE HEATER=extruder TARGET={TEMP}

[gcode_macro PIDtuneBED]
description: PID Tune Bed
gcode:
    {% set TEMP = params.TEMP|default(60)|float %}
    PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}

[gcode_macro ProbeZOffset]
description: Start probe_calibrate 
gcode:
    G28
    probe_calibrate

[gcode_macro GLOBALS]
description: Requied For Menu 
variable_display_group:"_default_16x4"
gcode:
    M115 ; must provide something

[gcode_macro SMART_HOME]
description: will home all axes that arenâ€™t already homed.
gcode:
    {% set toHome = [] %}
    {% if 'x' not in printer.toolhead.homed_axes %}
        { toHome.append('x') or "" }
    {% endif %}
    {% if 'y' not in printer.toolhead.homed_axes %}
        { toHome.append('y') or "" }
    {% endif %}
    {% if 'z' not in printer.toolhead.homed_axes %}
        { toHome.append('z') or "" }
    {% endif %}
    {% if toHome|length == 0 %}
        { action_respond_info('All axes homed!') }
    {% else %}
        G28 { toHome|join(' ') }
    {% endif %}

[gcode_macro TRAM_BED]
description: Trams the Bed
gcode:
    SET_DISPLAY_GROUP GROUP=screws_running
    SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=display_group VALUE="'screws_running'"
    SMART_HOME
    screws_tilt_calculate
    {% if printer.screws_tilt_adjust.error %}
        SET_DISPLAY_GROUP GROUP=screws_error
    {% else %}
        SET_DISPLAY_GROUP GROUP=screws_results
        SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=display_group VALUE="'screws_results'"
    {% endif %}